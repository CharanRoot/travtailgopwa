{"version":3,"sources":["components/OTPNumberInput.tsx","aws-exports.js","assets/data.ts","pages/OTPAuth.tsx","components/StoreItems.tsx","pages/Checkout.tsx","assets/util.ts","graphql/queries.ts","pages/Store.tsx","App.tsx","serviceWorker.ts","index.tsx","assets/Travtail.png"],"names":["TextMaskCustom","props","inputRef","other","ref","inputElement","mask","placeholderChar","showMask","autoFocus","guide","placeholder","OTPNumberInput","FormControl","InputLabel","htmlFor","Input","error","inputError","value","numberText","onChange","e","setNumberText","target","name","id","inputComponent","startAdornment","InputAdornment","position","style","maxWidth","awsmobile","vendingItems","index","img","title","price","maxQuantity","Amplify","configure","awsconfig","OTPAuth","React","useState","msgSent","setMsgSent","code","setCode","coolDown","setCoolDown","phoneError","setPhoneError","session","setSession","message","setMessage","loading","showLoading","password","Math","random","toString","history","useHistory","query","URLSearchParams","useLocation","search","getPhoneNumber","replace","signIn","a","console","log","Date","toISOString","Auth","result","signUp","username","attributes","phone_number","verifyOtp","sendCustomChallengeAnswer","user","setUser","get","setStoreId","items","setStoreItems","push","useEffect","setTimeout","verificationInput","TextField","label","size","event","autoComplete","Button","variant","margin","backgroundColor","color","disabled","onClick","className","src","logo","alt","CircularProgress","length","paddingTop","useStyles","makeStyles","fontWeight","subheader","StoreItems","item","addToCart","deleteFromCart","itemNumber","number","setNumber","classes","disableDelete","disableAdd","Card","marginBottom","CardHeader","avatar","Avatar","action","IconButton","stripePromise","loadStripe","Checkout","cart","phoneNumber","window","location","checkoutItems","filter","has","handleCheckout","forEach","myInit","response","body","phone","headers","API","post","stripe","redirectToCheckout","sessionId","data","itemLists","map","key","textAlign","padding","borderRadius","top","width","zIndex","fontSize","marginTop","minHeight","getStoreItem","givenStoreId","graphql","graphqlOperation","storeId","getStore","JSON","parse","Store","getStoreData","itemsList","App","setState","setStoreItem","storeItems","itemID","state","set","PrivateRoute","Component","component","rest","render","Object","keys","to","bypass","Map","basename","process","this","path","exact","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","StrictMode","document","getElementById","URL","href","origin","addEventListener","fetch","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.87e1da1e.chunk.js","sourcesContent":["import React from 'react';\nimport MaskedInput from 'react-text-mask';\nimport { Input, InputLabel, InputAdornment, FormControl } from '@material-ui/core';\n\n\ninterface TextMaskCustomProps {\n  inputRef: (ref: HTMLInputElement | null) => void;\n}\n\n// coustom mask\nconst TextMaskCustom = (props: TextMaskCustomProps) => {\n  const { inputRef, ...other } = props;\n\n  return (\n    <MaskedInput\n      {...other}\n      ref={(ref: any) => {\n        inputRef(ref ? ref.inputElement : null);\n      }}\n      mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n      placeholderChar={'\\u2000'}\n      showMask\n      autoFocus\n      guide={false}\n      placeholder='(xxx) xxx - xxxx'\n    />\n  );\n}\n\ninterface OTPNumberInputProps {\n  // pass down from OTPAuth page\n  numberText: string;\n  inputError: boolean;\n  setNumberText: (phoneNumber: string) => void;\n}\n\nconst OTPNumberInput: React.FC<OTPNumberInputProps> = (props) => {\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    props.setNumberText(e.target.value);\n  }\n\n  return (\n    <>\n      <FormControl>\n        <InputLabel htmlFor=\"phone-number\">Phone Number</InputLabel>\n        <Input\n          error={props.inputError}\n          value={props.numberText}\n          onChange={handleChange}\n          name=\"textmask\"\n          id=\"phone-number-mask-input\"\n          inputComponent={TextMaskCustom as any}\n          startAdornment={<InputAdornment position=\"start\">+1</InputAdornment>}\n          style={{ maxWidth: \"160px\" }}\n        />\n      </FormControl>\n    </>\n  );\n}\n\nexport default OTPNumberInput;","/* eslint-disable */\n// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile = {\n    \"aws_project_region\": \"us-east-1\",\n    \"aws_cognito_identity_pool_id\": \"us-east-1:39c1b6b3-8451-44c8-8ff4-36a925c09b32\",\n    \"aws_cognito_region\": \"us-east-1\",\n    \"aws_user_pools_id\": \"us-east-1_b81z2jnAQ\",\n    \"aws_user_pools_web_client_id\": \"65c53478dqfertlmbtdrtq9399\",\n    \"oauth\": {},\n    \"aws_cloud_logic_custom\": [\n        {\n            \"name\": \"stripeIntegration\",\n            \"endpoint\": \"https://ve0xisbmb1.execute-api.us-east-1.amazonaws.com/dev\",\n            \"region\": \"us-east-1\"\n        }\n    ],\n    \"aws_appsync_graphqlEndpoint\": \"https://rosmypxllbhcdp4ouyw5a624nm.appsync-api.us-east-1.amazonaws.com/graphql\",\n    \"aws_appsync_region\": \"us-east-1\",\n    \"aws_appsync_authenticationType\": \"AMAZON_COGNITO_USER_POOLS\"\n};\n\n\nexport default awsmobile;\n","export interface VendingItem {\n    index: number;\n    id: number;\n    img: string;\n    title: string;\n    name: string;\n    price: number;\n    maxQuantity: number;\n  }\n  \n  \n  const vendingItems: VendingItem[] = [\n    {\n      index: 0,\n      id: 1,\n      img: 'https://m.media-amazon.com/images/I/71x5rVYbJUL._AC_UL640_FMwebp_QL65_.jpg',\n      title: 'Image',\n      name: 'Coca-Cola',\n      price: 2.0,\n      maxQuantity: 5,\n    },\n    {\n      index: 1,\n      id: 2,\n      img: 'https://m.media-amazon.com/images/I/81MJ4oWlPUL._AC_UL640_FMwebp_QL65_.jpg',\n      title: 'Image',\n      name: 'Sprite',\n      price: 2.0,\n      maxQuantity: 4,\n    },\n    {\n      index: 2,\n      id: 3,\n      img: 'https://m.media-amazon.com/images/I/816P2FZYqYL._AC_UL640_FMwebp_QL65_.jpg',\n      title: 'Image',\n      name: 'Hershey Chocolate Bar',\n      price: 3,\n      maxQuantity: 11,\n    },\n    {\n      index: 3,\n      id: 4,\n      img: 'https://m.media-amazon.com/images/I/61scrhaaQ7L._AC_UL640_FMwebp_QL65_.jpg',\n      title: 'Image',\n      name: 'Skittles',\n      price: 3,\n      maxQuantity: 10,\n    },\n    {\n      index: 4,\n      id: 5,\n      img: 'https://m.media-amazon.com/images/I/71UGX--4VpL._AC_UY436_FMwebp_QL65_.jpg',\n      title: 'Image',\n      name: \"M&M's\",\n      price: 3,\n      maxQuantity: 7,\n    },\n    {\n      index: 5,\n      id: 6,\n      img: 'https://m.media-amazon.com/images/I/81ueACxWoKL._AC_UL640_FMwebp_QL65_.jpg',\n      title: 'Image',\n      name: 'Dasani Water',\n      price: 1.5,\n      maxQuantity: 15,\n    },\n  ];\n  \n  export const getStoreItem = () => {\n    return vendingItems;\n  }\n  \n ","import React from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { Button, TextField, CircularProgress } from '@material-ui/core';\n\nimport OTPNumberInput from '../components/OTPNumberInput';\nimport logo from '../assets/Travtail.png';\n\nimport Amplify from '@aws-amplify/core';\nimport Auth from '@aws-amplify/auth';\nimport awsconfig from '../aws-exports';\n\nimport '../App.css';\n//import { getStoreItem, VendingItem } from '../assets/util';\nimport { getStoreItem, VendingItem } from '../assets/data';\n\nAmplify.configure(awsconfig);\n\n\ninterface OTPAuthProps {\n  setUser: (user: object) => void;\n  setStoreItems: (items: VendingItem[]) => void;\n  setStoreId: (id: string| null) => void;\n}\n\nconst useQuery = () => {\n  return new URLSearchParams(useLocation().search);\n}\n\nconst OTPAuth: React.FC<OTPAuthProps> = props => {\n  // indcate whether user click verify button\n  const [msgSent, setMsgSent] = React.useState<boolean>(false);\n  // phone number\n  const [numberText, setNumberText] = React.useState<string>('');\n  // verification code\n  const [code, setCode] = React.useState<string>('');\n  // cooldown timer for resent\n  const [coolDown, setCoolDown] = React.useState<number>(0);\n  // check phone input error\n  const [phoneError, setPhoneError] = React.useState<boolean>(false);\n  // user session\n  const [session, setSession] = React.useState(null);\n  // message to display\n  const [message, setMessage] = React.useState<string>('Welcome, please verify your phone');\n  const [loading, showLoading] = React.useState<boolean>(false);\n  // auto generate password\n  const password = Math.random().toString(10) + 'Abc#';\n\n  // react router\n  const history = useHistory();\n  // get query params\n  let query = useQuery();\n\n  // get the phone number from numberText states\n  const getPhoneNumber = () => {\n    return '+1' + numberText.replace(/\\s|\\(|\\)|-/g, '');\n  }\n\n\n  const signIn = async () => {\n    // log\n    console.log(`${new Date().toISOString()}: SignIn event`);\n    try {\n      const result = await Auth.signIn(getPhoneNumber());\n      if (result) {\n        setSession(result);\n      }\n    } catch (error) {\n      if (error.code === 'UserNotFoundException') {\n        signUp();\n      } else {\n        console.log(error.code);\n        console.log('error signing in:', error);\n      }\n    }\n  };\n\n  const signUp = async () => {\n    console.log('new sign up');\n    try {\n      await Auth.signUp({\n        username: getPhoneNumber(),\n        password,\n        attributes: {\n          phone_number: getPhoneNumber(),\n        },\n      });\n\n    } catch (error) {\n      console.log('error signing up:', error);\n    }\n  };\n\n  const verifyOtp = async () => {\n    try {\n      const user = await Auth.sendCustomChallengeAnswer(session, code);\n      if (user) {\n        props.setUser(user);\n        setSession(null);\n        console.log(user);\n        // load the store item\n        if (query.get('store')) {\n          // show loading stage\n          showLoading(true);\n          setMessage('Loading the store');\n          // pass store id\n          props.setStoreId(query.get('store'));\n          // @ts-ignore\n          //const items = await getStoreItem(query.get('store'));\n          const items = getStoreItem(query.get('store'));\n          if (items) {\n            props.setStoreItems(items);\n          }\n        }\n        // push to store page\n        history.push('/store');\n      }\n    } catch (error) {\n      setMessage('Authentication fail, new code sent');\n      await signIn();\n      setCode('');\n      console.log(error);\n    }\n  };\n\n  // handler for send message button\n  const onSendButtonClick = () => {\n    // check the phone number\n    if (getPhoneNumber().length === 12) {\n      signIn();\n      setMessage('Verify with SMS code');\n      // reset Phone number error\n      setPhoneError(false);\n      // mark msg sent to show code input\n      setMsgSent(true);\n      // set up coolDown time\n      setCoolDown(10);\n    } else {\n      setPhoneError(true);\n      setMessage('Please input valid phone number')\n    }\n  }\n\n  // get verification code input\n  const onCodeInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setCode(event.target.value);\n  }\n\n  // set up cutdown, update cooldown time\n  React.useEffect(() => {\n    coolDown > 0 && setTimeout(() => setCoolDown(coolDown - 1), 1000);\n  }, [coolDown]);\n\n\n  // the verification code textinput, only display when send is click\n  const verificationInput = msgSent ? (\n    <>\n      <TextField\n        id=\"verification-code\"\n        label=\"Input code\"\n        size=\"small\"\n        onChange={onCodeInputChange}\n        autoComplete=\"off\"\n        style={{ maxWidth: \"150px\" }}\n      />\n      <Button\n        variant=\"contained\"\n        style={{ margin: \"12px\", backgroundColor: \"#600EE6\", color: \"white\" }}\n        disabled={code ? false : true}\n        onClick={verifyOtp}\n      >Verify</Button>\n    </>\n  ) : null;\n\n  return (\n    <div className=\"App-header\">\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      <div>\n        <p>{message}</p>\n      </div>\n      <div>{loading ? <CircularProgress /> : null}</div>\n      <div>\n        <OTPNumberInput numberText={numberText} setNumberText={setNumberText} inputError={phoneError} />\n        <Button\n          onClick={onSendButtonClick}\n          variant=\"contained\"\n          style={{ margin: \"12px\", backgroundColor: \"#600EE6\", color: \"white\" }}\n          disabled={coolDown === 0 ? false : true}\n        >\n          {msgSent ? `Resend${coolDown ? `(${coolDown})` : ''}` : 'Send'}\n        </Button>\n      </div>\n      <div>\n        {verificationInput}\n      </div>\n      <div style={{ paddingTop: \"20px\" }}>\n        {query.get('store') ? `Current store #${query.get('store')}` : 'Not a valid store'}\n      </div>\n    </div>\n  );\n}\n\nexport default OTPAuth;\n","import React from 'react';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\nimport { Card, CardHeader, Avatar, IconButton, makeStyles } from '@material-ui/core';\n\nimport { VendingItem } from '../assets/util';\n\n// styles\nconst useStyles = makeStyles({\n  title: {\n    fontWeight: \"bold\",\n  },\n  subheader: {\n    color: \"#600EE6\",\n  },\n});\n\n\ninterface StoreItemsProp {\n  item: VendingItem;\n  addToCart: (key: number) => void;\n  deleteFromCart: (key: number) => void;\n  itemNumber?: number\n}\n\nconst StoreItems: React.FC<StoreItemsProp> = ({ item, addToCart, deleteFromCart, itemNumber }) => {\n  const [number, setNumber] = React.useState<number>(0);\n  // styles\n  const classes = useStyles();\n\n  React.useEffect(() => {\n    if (itemNumber) {\n      setNumber(itemNumber);\n    }\n  }, [itemNumber]);\n\n  const addOne = () => {\n    if (number + 1 <= item.maxQuantity) {\n      setNumber(number + 1);\n      addToCart(item.id);\n    }\n  }\n\n  const deleteOne = () => {\n    if (number - 1 >= 0) {\n      setNumber(number - 1);\n      deleteFromCart(item.id);\n    }\n  }\n\n  const disableDelete: boolean = number === 0 ? true : false;\n  const disableAdd: boolean = number === item.maxQuantity ? true : false\n\n  return (\n    <div>\n      <Card variant=\"outlined\" style={{ maxWidth: \"90vw\", margin: \"auto\", marginBottom: \"5px\" }}>\n        <CardHeader\n          classes={{\n            title: classes.title,\n            subheader: classes.subheader\n          }}\n          avatar={\n            <Avatar src={item.img} alt={item.name} />\n          }\n          title={item.name}\n          subheader={`Price:$ ${item.price} Available: ${item.maxQuantity}`}\n          action={\n            <div>\n              <IconButton size=\"small\" onClick={deleteOne} disabled={disableDelete}>\n                <RemoveCircleIcon style={{ color: \"600EE6\" }} />\n              </IconButton>\n              {number}\n              <IconButton size=\"small\" onClick={addOne} disabled={disableAdd}>\n                <AddCircleIcon style={{ color: \"600EE6\" }} />\n              </IconButton>\n            </div>\n          }\n        />\n      </Card>\n    </div>\n  );\n}\n\nexport default StoreItems;","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\nimport { loadStripe } from \"@stripe/stripe-js\";\n\nimport StoreItems from '../components/StoreItems';\nimport { VendingItem } from '../assets/util';\nimport logo from '../assets/Travtail.png';\nimport '../App.css';\n\nimport { API } from 'aws-amplify';\n\n// Make sure to call `loadStripe` outside of a component’s render\nconst stripePromise = loadStripe(\"pk_test_Wks4vayZlORiZoodc5IA0RhA00RaDpuklR\");\n\ninterface CheckoutProps {\n  cart: Map<number, number>;\n  addToCart: (key: number) => void;\n  deleteFromCart: (key: number) => void;\n  items: [VendingItem] | null;\n  phoneNumber: string | undefined;\n}\n\nconst Checkout: React.FC<CheckoutProps> = ({ cart, addToCart, deleteFromCart, items, phoneNumber }) => {\n  // react router\n  const history = useHistory();\n  // get checkout result\n  const [message, setMessage] = React.useState<string>(\"\");\n  // setup message if this is a redirect back from checkout\n  React.useEffect(() => {\n    // Check to see if this is a redirect back from Checkout\n    const query = new URLSearchParams(window.location.search);\n    if (query.get(\"success\")) {\n      setMessage(\"Thank you! You will receive an email confirmation for your order.\");\n    }\n    if (query.get(\"canceled\")) {\n      setMessage(\n        \"Order canceled -- continue to shop around and checkout when you're ready.\"\n      );\n    }\n  }, []);\n\n  const checkoutItems = items ? items.filter((item) => {\n    if (cart.has(item.id)) {\n      // @ts-ignore\n      if (cart.get(item.id) > 0) {\n        return true;\n      }\n    }\n    return false;\n  }) : [];\n\n\n  // handle checkout\n  const handleCheckout = async () => {\n    // before checkout, add numbers of purchase info\n    checkoutItems.forEach((value) => {\n      // @ts-ignore\n      value.number = cart.get(value.id);\n    });\n    let myInit = {\n      response: true,\n      body: {\n        items: checkoutItems,\n        phone: phoneNumber? phoneNumber : ''\n      },\n      headers: {} // OPTIONAL\n    }\n\n    try {\n      const response = await API.post(\"stripeIntegration\", \"/stripe\", myInit);\n      console.log(\"setupIntents\", response);\n\n      const stripe = await stripePromise;\n      //const session = await response.json();\n      // When the customer clicks on the button, redirect them to Checkout.\n      const result = await stripe?.redirectToCheckout({\n        sessionId: response.data.id,\n      });\n      if (result?.error) {\n        // If `redirectToCheckout` fails due to a browser or network\n        // error, display the localized error message to your customer\n        // using `result.error.message`.\n      }\n    } catch (e) {\n      console.log(\"error\", e);\n    }\n\n  };\n\n  const itemLists = items ? items.filter((item) => {\n    if (cart.has(item.id)) {\n      // @ts-ignore\n      if (cart.get(item.id) > 0) {\n        return true;\n      }\n    }\n    return false;\n  }).map((value, index) =>\n    <StoreItems key={index} addToCart={addToCart} deleteFromCart={deleteFromCart} item={value} itemNumber={cart.get(value.id)} />)\n    : (\n      <div style={{textAlign:\"center\"}}>\n        Unable to get store items\n      </div>\n    );\n\n  return message ? (\n    <div>\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      <p style={{padding: \"10px\"}}>{message}</p>\n      <Button \n        onClick={() => { history.push('/') }}\n        style={{ borderRadius: \"10px\", backgroundColor: \"#600EE6\", color: \"white\" }}\n      >\n        Return\n      </Button>\n    </div>\n  ) :\n    (\n      <div>\n        <div style={{ position: \"fixed\", top: \"0\", width: \"100%\", backgroundColor: \"#600EE6\", zIndex: 20 }}>\n          <p style={{ fontSize: \"22px\", marginTop: \"2vh\", color: \"white\", fontWeight: 500 }}>Checkout</p>\n        </div>\n        <div style={{ minHeight: \"92vh\", marginTop: \"8vh\", backgroundColor: \"whitesmoke\" }}>\n          <div style={{ paddingTop: \"20px\", textAlign: \"left\" }}>\n            {itemLists}\n          </div>\n          <div style={{ padding: \"10px\" }}>\n            <Button\n              onClick={handleCheckout}\n              style={{ borderRadius: \"10px\", backgroundColor: \"#600EE6\", color: \"white\" }}\n            >\n              Checkout\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n}\n\nexport default Checkout;","import API, { graphqlOperation } from '@aws-amplify/api';\nimport { getStore } from '../graphql/queries';\n\n// item interface\nexport interface VendingItem {\n  index: number;\n  id: number;\n  img: string;\n  title: string;\n  name: string;\n  price: number;\n  maxQuantity: number;\n}\n\nexport const getStoreItem = async (givenStoreId: string) => {\n  try {\n    const response: any = await API.graphql(\n      graphqlOperation(getStore, {\n        storeId: givenStoreId,\n      })\n    );\n\n    if (response.data.getStore !== null) {\n      // navigation.navigate('StoreScreen2', {\n      //   storeItems: JSON.parse(response.data.getStore.items),\n      // });\n      // await AsyncStorage.setItem('storeItemDB', response.data.getStore.items);\n\n      // to do: with data\n      return JSON.parse(response.data.getStore.items);\n\n    } else {\n      // Alert.alert(\"Store Doesn't Exist\");\n      return null;\n    }\n  } catch (err) {\n    console.log('error finding store...', err);\n    return null;\n  }\n};\n\n","/* tslint:disable */\n/* eslint-disable */\n// this is an auto generated file. This will be overwritten\n\nexport const getCustomer = /* GraphQL */ `\n  query GetCustomer($userId: String!) {\n    getCustomer(userId: $userId) {\n      userId\n      name\n      phoneNumber\n      address\n      email\n      properties\n      paymentId\n      isActive\n      customerType\n      created_at\n      updated_at\n    }\n  }\n`;\nexport const listCustomers = /* GraphQL */ `\n  query ListCustomers {\n    listCustomers {\n      userId\n      name\n      phoneNumber\n      address\n      email\n      properties\n      paymentId\n      isActive\n      customerType\n      created_at\n      updated_at\n    }\n  }\n`;\nexport const getCustomerOrders = /* GraphQL */ `\n  query GetCustomerOrders($orderId: String!) {\n    getCustomer_orders(orderId: $orderId) {\n      orderId\n      price\n      userId\n      storeId\n      items\n      status\n      payment\n      created_at\n      updated_at\n    }\n  }\n`;\nexport const listCustomerOrderss = /* GraphQL */ `\n  query ListCustomerOrderss {\n    listCustomer_orderss {\n      orderId\n      price\n      userId\n      storeId\n      items\n      status\n      payment\n      created_at\n      updated_at\n    }\n  }\n`;\nexport const getStore = /* GraphQL */ `\n  query GetStore($storeId: String!) {\n    getStore(storeId: $storeId) {\n      storeId\n      ipAddress\n      items\n      ownerId\n      address\n      properties\n    }\n  }\n`;\nexport const listStores = /* GraphQL */ `\n  query ListStores {\n    listStores {\n      storeId\n      ipAddress\n      items\n      ownerId\n      address\n      properties\n      isActive\n      created_at\n      updated_at\n    }\n  }\n`;\nexport const getTodo = /* GraphQL */ `\n  query GetTodo($id: ID!) {\n    getTodo(id: $id) {\n      id\n      name\n      description\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const listTodos = /* GraphQL */ `\n  query ListTodos(\n    $filter: ModelTodoFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listTodos(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        name\n        description\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\n","import React from 'react';\nimport StoreItems from '../components/StoreItems';\nimport { useHistory } from 'react-router-dom';\nimport { Button, IconButton } from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/Refresh';\n\n// temp function to mimic database API call \nimport { getStoreItem, VendingItem } from '../assets/util';\n\ninterface StoreProps {\n  addToCart: (key: number) => void;\n  deleteFromCart: (key: number) => void;\n  setStoreItems: (items: [VendingItem]) => void;\n  items: [VendingItem] | null;\n  storeId: string | null;\n}\n\nconst Store: React.FC<StoreProps> = (props) => {\n\n  const history = useHistory();\n\n  const goToCheckout = () => {\n    history.push(\"/checkout\");\n  }\n\n\n  const getStoreData = async () => {\n    if ((!props.items) && props.storeId) {\n      const result = await getStoreItem(props.storeId);\n      props.setStoreItems(result);\n    }\n  }\n\n  const itemsList = props.items ? props.items.map((value, index) =>\n    <StoreItems key={index} addToCart={props.addToCart} deleteFromCart={props.deleteFromCart} item={value} />)\n    : (\n      props.storeId ?\n        <div style={{ textAlign: \"center\" }}>\n          <p>Refresh to get store items</p>\n          <IconButton onClick={getStoreData} style={{ color: \"#600EE6\" }}>\n            <RefreshIcon />\n          </IconButton>\n        </div>\n        :\n        <div style={{ textAlign: \"center\" }}>Unable to load store items, scan again</div>\n    );\n  return (\n    <div>\n      <div style={{ position: \"fixed\", top: \"0\", width: \"100%\", backgroundColor: \"#600EE6\", zIndex: 20 }}>\n        <p style={{ fontSize: \"22px\", marginTop: \"2vh\", color: \"white\", fontWeight: 500 }}>\n          {props.storeId ? `Store #${props.storeId}` : 'Store'}\n        </p>\n      </div>\n      <div style={{ minHeight: \"92vh\", marginTop: \"8vh\", backgroundColor: \"whitesmoke\" }}>\n        <div style={{ paddingTop: \"20px\", textAlign: \"left\" }}>\n          {itemsList}\n        </div>\n        <div style={{ padding: \"10px\" }}>\n          {props.items && <Button onClick={goToCheckout} style={{ color: \"#600EE6\", fontWeight: \"bold\" }}>Show Cart</Button>}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Store;","import React from 'react';\nimport { BrowserRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\n\nimport OTPAuth from './pages/OTPAuth';\nimport Checkout from './pages/Checkout';\nimport Store from './pages/Store';\n\nimport './App.css';\nimport { VendingItem } from './assets/util';\n\ninterface AppState {\n  user: object,\n  cart: Map<number, number>,\n  storeItems: VendingItem[] | null,\n  storeId: string | null,\n}\n\nclass App extends React.Component<{}, AppState> {\n  constructor(props: any) {\n    super(props);\n    // this.state = {\n    //   user: {}\n    // }\n    // temp bypass auth\n    this.state = {\n      user: { bypass: true },\n      cart: new Map<number, number>(),\n      storeItems: null,\n      storeId: null,\n    }\n  }\n\n  setUser = (user: object) => {\n    this.setState({ user });\n  }\n\n  setStoreItem = (items: VendingItem[]) => {\n    this.setState({ storeItems: items });\n  }\n\n  setStoreId = (id: string | null) => {\n    this.setState({ storeId: id });\n  }\n\n  addToCart = (itemID: number) => {\n    // chcek if exist\n    if (this.state.cart.has(itemID)) {\n      // @ts-ignore\n      this.setState({ cart: this.state.cart.set(itemID, this.state.cart.get(itemID) + 1) });\n    } else {\n      this.setState({ cart: this.state.cart.set(itemID, 1) });\n    }\n  }\n\n  deleteFromCart = (itemID: number) => {\n    // chcek if exist\n    if (this.state.cart.has(itemID)) {\n      // @ts-ignore\n      this.setState({ cart: this.state.cart.set(itemID, this.state.cart.get(itemID) - 1) });\n    }\n  }\n\n  // private route, check the auth\n  PrivateRoute = ({ component: Component, data, ...rest }: any) => {\n    return (\n      <Route {...rest} render={(props) => (Object.keys(this.state.user).length > 0\n        ? <Component {...props} {...data} />\n        : <Redirect to=\"/\" />)} />\n    );\n  };\n\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div className=\"App\">\n          <Switch>\n            <this.PrivateRoute\n              component={Checkout}\n              data={{\n                addToCart: this.addToCart,\n                deleteFromCart: this.deleteFromCart,\n                items: this.state.storeItems,\n                cart: this.state.cart,\n                // @ts-ignore\n                phoneNumber: this.state.user.username,\n              }}\n              path=\"/checkout\" />\n            <this.PrivateRoute\n              component={Store}\n              data={{\n                addToCart: this.addToCart,\n                deleteFromCart: this.deleteFromCart,\n                items: this.state.storeItems,\n                storeId: this.state.storeId,\n                setStoreItems: this.setStoreItem\n              }}\n              path=\"/store\" />\n            <Route path=\"/\" exact render={() => <OTPAuth setUser={this.setUser} setStoreItems={this.setStoreItem} setStoreId={this.setStoreId} />} />\n          </Switch>\n        </div>\n      </Router>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/Travtail.6c5af999.png\";"],"sourceRoot":""}